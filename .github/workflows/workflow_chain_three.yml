# Note when using act:
# Some services &/ steps require adjusting to test locally using `act`.
# To check for `act` use this in an if: `github.actor != 'nektos/act'`

name: Workflow chain three

on:
  workflow_run:
    types: 
      - completed
    workflows: ["Workflow chain two"]

jobs:
    test:
      runs-on: ubuntu-latest

      steps:
        - name: Echo
          run: |
            echo "This is the final part of the chain" && exit 0

    dispatch_required_status:
      runs-on: ubuntu-latest

      steps:
        - uses: octokit/request-action@v2.x
          name: Required Status Workflow Dispatch
          with:
            route: POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches
            owner: ${{ github.repository_owner }}
            repo: ${{ github.event.repository.name }}
            workflow_id: "workflow_dispatch"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Create check run
        - uses: octokit/request-action@v2.x
          id: create_check_run
          with:
            route: POST /repos/{owner}/{repo}/check-runs
            owner: ${{ github.repository_owner }}
            repo: ${{ github.event.repository.name }}
            name: "Test check run"
            head_sha: ${{ github.sha }}
            output: | # The | is significant!
              title: Test check run title
              summary: A summary of the test check run
              images:
                - alt: Test image
                  image_url: https://octodex.github.com/images/jetpacktocat.png
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Update check run to completed, successful status
        - uses: octokit/request-action@v2.x
          id: update_check_run
          with:
            route: PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}
            owner: ${{ github.repository_owner }}
            repo: ${{ github.event.repository.name }}
            check_run_id: ${{ fromJson(steps.create_check_run.outputs.data).id }}
            conclusion: "success"
            status: "completed"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}